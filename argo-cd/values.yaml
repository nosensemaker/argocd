# Argo CD RBAC policy configuration
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md

rbac:
    # -- Create the argocd-rbac-cm configmap with ([Argo CD RBAC policy]) definitions.
    # If false, it is expected the configmap will be created by something else.
    # Argo CD will not work if there is no configmap created with the name above.
    create: true

    # -- Annotations to be added to argocd-rbac-cm configmap
    annotations: {}

    # -- The name of the default role which Argo CD will falls back to, when authorizing API requests (optional).
    # If omitted or empty, users may be still be able to login, but will see no apps, projects, etc...
    policy.default: ''

    # -- File containing user-defined policies and role definitions.
    # @default -- `''` (See [values.yaml])
    policy.csv: ''
    # Policy rules are in the form:
    #  p, subject, resource, action, object, effect
    # Role definitions and bindings are in the form:
    #  g, subject, inherited-subject
    # policy.csv: |
    #   p, role:org-admin, applications, *, */*, allow
    #   p, role:org-admin, clusters, get, *, allow
    #   p, role:org-admin, repositories, *, *, allow
    #   p, role:org-admin, logs, get, *, allow
    #   p, role:org-admin, exec, create, */*, allow
    #   g, your-github-org:your-team, role:org-admin

    # -- OIDC scopes to examine during rbac enforcement (in addition to `sub` scope).
    # The scope value can be a string, or a list of strings.
    scopes: "[groups]"

    # -- Matcher function for Casbin, `glob` for glob matcher and `regex` for regex matcher.
    policy.matchMode: "glob"


configs:
  cm:
    url: https://argocd.in.iti.br
    dex.config: |
      connectors:
      - type: ldap
        id: ldap
        name: OpenLDAP
        config:
          host: 192.168.17.169:389
          insecureNoSSL: true
          startTLS: false
          insecureSkipVerify: false
          bindDN: "cn=admin,dc=in,dc=iti,dc=br"
          bindPW: "qwerty@123"
          userSearch:
            baseDN: "ou=People,dc=in,dc=iti,dc=br"
            filter: "(objectClass=inetOrgPerson)"
            username: "uid"
            idAttr: "uid"
            emailAttr: "mail"
            nameAttr: "cn"
          groupSearch:
            baseDN: "ou=Groups,dc=in,dc=iti,dc=br"
            filter: "(|(objectClass=groupOfNames)(objectClass=posixGroup))"
            userMatchers:
            - userAttr: "dn"
              groupAttr: "member"
            - userAttr: "uid"
              groupAttr: "memberUid"
            nameAttr: "cn"
